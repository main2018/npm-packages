name: publish vite-plugin-svelte-imgsrc2import

on:
  push:
    branches: # 限制触发的分支
      - main
    # tags:
    #   - 'v*'
    paths: # 限制触发的文件
      - 'vite-plugin-svelte-imgsrc2import/**'
  pull_request:
    branches:
      - main
    paths:
      - 'vite-plugin-svelte-imgsrc2import/**'
  workflow_dispatch:  # 支持手动触发工作流
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'

# 如果你要分别对 代码提交 和 tag 创建 做不同的处理,可以这样写
# jobs:
#   build:
#     if: startsWith(github.ref, 'refs/heads/')
#     ...

#   release:
#     if: startsWith(github.ref, 'refs/tags/')
#     ...
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      WORKDIR: vite-plugin-svelte-imgsrc2import

    steps:
      # 拉取代码
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
          # cache: 'npm'

      # 缓存 node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKDIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKDIR }}/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 安装依赖
      - name: Install dependencies for Package A
        working-directory: ${{ env.WORKDIR }}
        run: npm ci

      # 打包
      - name: Build Package A
        working-directory: ${{ env.WORKDIR }}
        run: npm run build
      
      - name: Check if NPM_TOKEN is set
        run: |
          if [ -z "$NPM_TOKEN" ]; then
            echo "❌ NPM_TOKEN is not set"
            exit 1
          else
            echo "✅ NPM_TOKEN is set (value hidden for security)"
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 发布 
      - name: Publish Package A
        # run: npm publish --registry=https://registry.npmjs.org/ --access=public
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "❌ NODE_AUTH_TOKEN 不存在"
          else
            echo "✅ NPM_TOKEN 存在 (值已隐藏)" 
          fi
          npm whoami
          npm publish --registry=https://registry.npmjs.org/ --access=public
        working-directory: ${{ env.WORKDIR }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # 发布
      # - name: Publish Package A
      #   uses: JS-DevTools/npm-publish@v1
      #   with:
      #     token: ${{ secrets.NPM_TOKEN }}
      #     package: ${{ env.WORKDIR }}
